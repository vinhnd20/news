name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Hugo News
        uses: docker/build-push-action@v6
        with:
          context: .
          file: cicd/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/news:latest
            ${{ secrets.DOCKER_USERNAME }}/news:1.${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Di chuyển đến thư mục chứa docker-compose.yml
            cd $HOME/hugo-news-site/cicd

            # Pull image mới nhất
            docker compose pull

            # Chạy docker-compose
            docker compose up -d --remove-orphans

            # Xóa image cũ không dùng
            docker image prune -f

            # Chờ container khởi động
            sleep 5

            # Kiểm tra trạng thái container
            echo "Checking container status..."
            if [ "$(docker ps -q -f name=cicd_hugo-website_1)" ]; then
              echo "Container cicd_hugo-website_1 is running."
            else
              echo "Error: Container cicd_hugo-website_1 is not running!"
              docker ps -a  # Hiển thị tất cả container, bao gồm đã dừng
              docker logs cicd_hugo-website_1  # Hiển thị log để debug
              exit 1  # Làm pipeline thất bại
            fi

            # Kiểm tra trạng thái container chi tiết
            docker ps
